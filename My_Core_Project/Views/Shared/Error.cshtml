@model ErrorViewModel
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment env
@{
    ViewData["Title"] = "Error";
    bool isDev = env.IsDevelopment();
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="container text-center mt-5">
    <img src="https://cdn-icons-png.flaticon.com/512/564/564619.png" alt="Error" width="120" />
    <h1 class="mt-3 text-danger">Oops! Something went wrong.</h1>

    @if (!isDev)
    {
        <p class="text-muted">We encountered an unexpected error while processing your request.</p>
        <a href="/" class="btn btn-primary mt-3">Go to Home</a>
        <button class="btn btn-outline-secondary mt-3" onclick="location.reload()">Try Again</button>
    }
    else
    {
        <div class="alert alert-warning text-start mt-4">
            <h4>Development Mode Details</h4>
            <p><strong>Request ID:</strong> @Model.RequestId</p>
            <p>Detailed error information will be displayed here when exceptions are passed from the controller.</p>
            <p class="small text-muted">Tip: In production, detailed errors are hidden for security reasons.</p>
        </div>
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        Swal.fire({
            icon: 'error',
            title: 'Error Occurred',
            text: '@(isDev ? "Detailed error info is shown below." : "Please try again later or contact support.")',
            confirmButtonText: 'OK'
        });
    });
</script>
